########## Section 2-2 テンプレートを利用しよう

#テンプレートはDjangoを使って、HTMLの内容をあれこれ操作できるようにするためのもの

#アプリケーションの登録 → プロジェクトのsettings.py
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'アプリ名',
    ]
    
#テンプレートを置くところ → プロジェクト\アプリ名\templates\アプリ名
#index.htmlを作成する → プロジェクト\アプリ名\templates\アプリ名\index.html

#アプリ名のurl.pyに入力
    urlpatterns = [
        path('', views.index, name='index'),
    ]
    
#アプリ名のviews.pyに入力
    from django.shortcuts import render
    from django.http import HttpResponse
    
    def index(request)
        return render(request, 'hello/index.html')

※render関数について   →   render(《HttpRequest》,テンプレート)
    第1引数：クライアントへの返送を管理するHttpRequestインスタンスを指定
    第2引数：使用するテンプレートファイルを指定、「templates」フォルダからのパスで指定
    render関数は、指定したテンプレートを読み込み、レンダリングを返す。
    レンダリングとは、テンプレートに記述されている変数などを実際に使う値に置き換えて表示を完成されす処理
    レンダリングに使ったrender関数は、Djangoに用意されている「ショートカット関数」と呼ばれているものの1つ

renderは、テンプレートをレンダリングするのに使われる関数

#djangoをレンダリングしてhtmlへ呼び出す
    htmlから{{変数名}}で書く
    
    #アプリ名views.pyに関数を入力
        def index(request):
            params = {
                    'title':'Hello/Index',
                    'msg':'これは、サンプルで作ったページです。',
                }
            return render(request, 'hello/index.hmtl', params)                
        
#複数ページに移動
    #index.htmlに追加入力
        <p><a href="{% url goto %}">{{goto}}</a></p>
    #views.pyに追加入力
        def index(request):
            params = {
                    'title':'Hello/Index',
                    'msg':'これは、サンプルで作ったページです。',
                    'goto':'next',
                }
            return render(request, 'hello/index.hmtl', params)
            
        def next(request):
            params = {
                    'title':'Hello/Index',
                    'msg':'これは、もう１つのページです。',
                    'goto':'index',
                }
            return render(request, 'hello/index.html', params)
            
    #urls.pyに追加入力
        urlpartterns = [
            path('', views.index, name='index'),
            path('next', views.next, name='next'),
        ]
        
    #テンプレートタグ   →   {% url 名前 %} (名前がurls.pyのpathのnameと同じ)
    
    #静的ファイルを使用(static)
    #フォルダの作成
        アプリ名/static/アプリ名/ファイル(css)orフォルダ/ファイル(css)
    #staticファイルをロード
        index.html
        {% load static %}
        
        <head>
            <link rel="stylesheet" type="text/css" href="{% static 'アプリ名/ファイル(css)orフォルダ/ファイル(css) %}" />
        </head>
